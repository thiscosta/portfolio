/**********************************************************************
*
*   Types file generated by Quest
*
*   Types for the components props go in this file
*   To set up custom types for the components props, edit the corresponding types in this file
*   Once you edit a type to no longer by "any", be careful to not override it on your next export 
*   Verify diff before merging
*
*   For help and further details refer to: 
*   https://docs.quest.ai/react/fundamentals/exporting-code
*
*
**********************************************************************/

export interface Card4Props {
  testprop1: any;
  testprop2: any;
};

export interface MeetingListItemProps {
  prop1: any;
  isHover: any;
};

export interface TestAlertProps {
  description: any;
};

