/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';
import questTheme from './QuestDesignSystemLightTheme';
import { Button } from '@mui/material';
import VectorImage from './assets/images/Vector_2.png';
import XImage from './assets/images/x_2.png';
import Vector1Image from './assets/images/Vector_1.png';
import X1Image from './assets/images/x_1.png';
import Ellipse45Image from './assets/images/Ellipse_45_14.png';
import Ellipse451Image from './assets/images/Ellipse_45_13.png';
import Ellipse452Image from './assets/images/Ellipse_45_12.png';
import Ellipse453Image from './assets/images/Ellipse_45_11.png';
import Ellipse454Image from './assets/images/Ellipse_45_10.png';
import Ellipse455Image from './assets/images/Ellipse_45_9.png';
import X2Image from './assets/images/x.png';
import Vector2Image from './assets/images/Vector.png';
import Ellipse456Image from './assets/images/Ellipse_45_8.png';
import Ellipse457Image from './assets/images/Ellipse_45_7.png';
import Ellipse458Image from './assets/images/Ellipse_45_6.png';
import Ellipse459Image from './assets/images/Ellipse_45_5.png';
import Ellipse4510Image from './assets/images/Ellipse_45_4.png';
import Ellipse4511Image from './assets/images/Ellipse_45_3.png';
import Ellipse4512Image from './assets/images/Ellipse_45_2.png';
import Ellipse4513Image from './assets/images/Ellipse_45_1.png';
import Ellipse4514Image from './assets/images/Ellipse_45.png';
import { styled } from '@mui/material/styles';
import useDowngradeUpgrade from './useDowngradeUpgrade';
 
const TypeTeamMonthlyLimit = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  boxShadow: `0px 4px 12px rgba(0, 0, 0, 0.25)`,  
  borderRadius: `8px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: `549px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `40px 30px`,  
  boxSizing: `border-box`,  
});
  
const TopWarningWorkspace = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: data.currentPlan === 15 && props.limits === "user" ? `0px` : data.currentPlan === 18 && props.limits === "user" ? `0px` : data.currentPlan === 14 && props.limits === "user" ? `0px` : data.currentPlan === 17 && props.limits === "user" ? `0px` : `22px 0px 0px 0px`,  
}));
  
const Warning = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const Row = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const AlertOutlined = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const UnstyledAlert = styled("div")({  
  border: `1px solid rgba(233, 78, 124, 1)`,  
  boxSizing: `border-box`,  
  borderRadius: `4px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `6px 16px`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const IconContainer = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `7px 0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Vector = styled("img")({  
  height: `18.33px`,  
  width: `18.33px`,  
  margin: `0px`,  
});
  
const Text = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `8px 0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px 0px 0px 12px`,  
  overflow: `hidden`,  
});
  
const Title = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: theme.typography["Components"]["Alert Title"].fontStyle,  
  fontFamily: theme.typography["Components"]["Alert Title"].fontFamily,  
  fontWeight: theme.typography["Components"]["Alert Title"].fontWeight,  
  fontSize: theme.typography["Components"]["Alert Title"].fontSize,  
  letterSpacing: theme.typography["Components"]["Alert Title"].letterSpacing,  
  textDecoration: theme.typography["Components"]["Alert Title"].textDecoration,  
  lineHeight: theme.typography["Components"]["Alert Title"].lineHeight,  
  textTransform: theme.typography["Components"]["Alert Title"].textTransform,  
  alignSelf: `stretch`,  
  margin: `4px 0px 0px 0px`,  
}));
  
const Description = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(74, 25, 40, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const XHolder = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-end`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px 0px 0px 22px`,  
});
  
const X = styled("img")({  
  height: `12px`,  
  width: `12px`,  
  margin: `0px`,  
  cursor: `pointer`,  
});
  
const TopWarningApps = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: data.currentPlan === 15 && props.limits === "workspace" ? `0px` : data.currentPlan === 18 && props.limits === "workspace" ? `0px` : data.currentPlan === 14 && props.limits === "workspace" ? `0px` : data.currentPlan === 17 && props.limits === "workspace" ? `0px` : `22px 0px 0px 0px`,  
}));
  
const Warning1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const Row1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const AlertOutlined1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const UnstyledAlert1 = styled("div")({  
  border: `1px solid rgba(233, 78, 124, 1)`,  
  boxSizing: `border-box`,  
  borderRadius: `4px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `6px 16px`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const IconContainer1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `7px 0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Vector1 = styled("img")({  
  height: `18.33px`,  
  width: `18.33px`,  
  margin: `0px`,  
});
  
const Text1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `8px 0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px 0px 0px 12px`,  
  overflow: `hidden`,  
});
  
const Title1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: theme.typography["Components"]["Alert Title"].fontStyle,  
  fontFamily: theme.typography["Components"]["Alert Title"].fontFamily,  
  fontWeight: theme.typography["Components"]["Alert Title"].fontWeight,  
  fontSize: theme.typography["Components"]["Alert Title"].fontSize,  
  letterSpacing: theme.typography["Components"]["Alert Title"].letterSpacing,  
  textDecoration: theme.typography["Components"]["Alert Title"].textDecoration,  
  lineHeight: theme.typography["Components"]["Alert Title"].lineHeight,  
  textTransform: theme.typography["Components"]["Alert Title"].textTransform,  
  alignSelf: `stretch`,  
  margin: `4px 0px 0px 0px`,  
}));
  
const Description1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(74, 25, 40, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const XHolder1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-end`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px 0px 0px 22px`,  
});
  
const X1 = styled("img")({  
  height: `12px`,  
  width: `12px`,  
  margin: `0px`,  
  cursor: `pointer`,  
});
  
const TopAll = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `space-between`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: data.currentPlan === 15 && props.limits === "user" ? `22px 0px 0px 0px` : data.currentPlan === 18 && props.limits === "user" ? `22px 0px 0px 0px` : data.currentPlan === 14 && props.limits === "user" ? `22px 0px 0px 0px` : data.currentPlan === 17 && props.limits === "user" ? `22px 0px 0px 0px` : data.currentPlan === 15 && props.limits === "workspace" ? `22px 0px 0px 0px` : data.currentPlan === 18 && props.limits === "workspace" ? `22px 0px 0px 0px` : data.currentPlan === 14 && props.limits === "workspace" ? `22px 0px 0px 0px` : data.currentPlan === 17 && props.limits === "workspace" ? `22px 0px 0px 0px` : `0px`,  
}));
  
const Top = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `489px`,  
});
  
const TopSecWX = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: data.currentPlan === 15 && props.limits === "user" ? `flex-start` : data.currentPlan === 18 && props.limits === "user" ? `flex-start` : data.currentPlan === 14 && props.limits === "user" ? `flex-start` : data.currentPlan === 17 && props.limits === "user" ? `flex-start` : data.currentPlan === 15 && props.limits === "workspace" ? `flex-start` : data.currentPlan === 18 && props.limits === "workspace" ? `flex-start` : data.currentPlan === 14 && props.limits === "workspace" ? `flex-start` : data.currentPlan === 17 && props.limits === "workspace" ? `flex-start` : `space-between`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
  
const TopLeft = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: data.currentPlan === 15 && props.limits === "user" ? `0px` : data.currentPlan === 18 && props.limits === "user" ? `0px` : data.currentPlan === 14 && props.limits === "user" ? `0px` : data.currentPlan === 17 && props.limits === "user" ? `0px` : data.currentPlan === 15 && props.limits === "workspace" ? `0px` : data.currentPlan === 18 && props.limits === "workspace" ? `0px` : data.currentPlan === 14 && props.limits === "workspace" ? `0px` : data.currentPlan === 17 && props.limits === "workspace" ? `0px` : "unset",  
}));
  
const Top1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const YourCurrentSubscript = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(128, 128, 128, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `10px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const Team = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `192.17px`,  
  margin: `1px 0px 0px 0px`,  
});
  
const Pro = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `192.17px`,  
  margin: `1px 0px 0px 0px`,  
});
  
const Q49MoPerWorkspaceUse = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `17px`,  
  textTransform: `none`,  
  margin: `1px 0px 0px 0px`,  
});
  
const Q58MoPerWorkspaceUse = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `17px`,  
  textTransform: `none`,  
  margin: `1px 0px 0px 0px`,  
});
  
const Q79MoPerWorkspaceUse = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `1px 0px 0px 0px`,  
});
  
const Q93MoPerWorkspaceUse = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `1px 0px 0px 0px`,  
});
  
const ProBullets = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `20px 0px 0px 0px`,  
});
  
const Bullet = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse45 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const UnlimitedWorkspaces = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse451 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q1AppPerWorkspace = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse452 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q3UsersMaxPerWorkspa = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const TeamBullets = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px 0px 6px 0px`,  
  boxSizing: `border-box`,  
  margin: `20px 0px 0px 0px`,  
});
  
const Bullet3 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse453 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const UnlimitedWorkspaces1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet4 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse454 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q5AppsPerWorkspace = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet5 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse455 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q10UsersMaxPerWorksp = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const X2 = styled("img", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  height: `12px`,  
  width: `12px`,  
  cursor: `pointer`,  
  margin: data.currentPlan === 15 && props.limits === "user" ? `0px 0px 0px 20px` : data.currentPlan === 18 && props.limits === "user" ? `0px 0px 0px 20px` : data.currentPlan === 14 && props.limits === "user" ? `0px 0px 0px 20px` : data.currentPlan === 17 && props.limits === "user" ? `0px 0px 0px 20px` : data.currentPlan === 15 && props.limits === "workspace" ? `0px 0px 0px 20px` : data.currentPlan === 18 && props.limits === "workspace" ? `0px 0px 0px 20px` : data.currentPlan === 14 && props.limits === "workspace" ? `0px 0px 0px 20px` : data.currentPlan === 17 && props.limits === "workspace" ? `0px 0px 0px 20px` : "unset",  
}));
  
const Mid = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `16px 0px 0px 0px`,  
});
  
const Warning2 = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: data.currentPlan === 14 && props.limits === false ? `20px 0px 0px 0px` : data.currentPlan === 17 && props.limits === false ? `20px 0px 0px 0px` : data.currentPlan === 15 && props.limits === "user" ? `20px 0px 0px 0px` : data.currentPlan === 18 && props.limits === "user" ? `20px 0px 0px 0px` : data.currentPlan === 14 && props.limits === "user" ? `20px 0px 0px 0px` : data.currentPlan === 17 && props.limits === "user" ? `20px 0px 0px 0px` : data.currentPlan === 15 && props.limits === "workspace" ? `20px 0px 0px 0px` : data.currentPlan === 18 && props.limits === "workspace" ? `20px 0px 0px 0px` : data.currentPlan === 14 && props.limits === "workspace" ? `20px 0px 0px 0px` : data.currentPlan === 17 && props.limits === "workspace" ? `20px 0px 0px 0px` : `0px`,  
}));
  
const Row2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const AlertOutlined2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const UnstyledAlert2 = styled("div")({  
  border: `1px solid rgba(233, 78, 124, 1)`,  
  boxSizing: `border-box`,  
  borderRadius: `4px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `6px 16px`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const IconContainer2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `7px 0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Vector2 = styled("img")({  
  height: `18.33px`,  
  width: `18.33px`,  
  margin: `0px`,  
});
  
const Text2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `8px 0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px 0px 0px 12px`,  
  overflow: `hidden`,  
});
  
const Title2 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: theme.typography["Components"]["Alert Title"].fontStyle,  
  fontFamily: theme.typography["Components"]["Alert Title"].fontFamily,  
  fontWeight: theme.typography["Components"]["Alert Title"].fontWeight,  
  fontSize: theme.typography["Components"]["Alert Title"].fontSize,  
  letterSpacing: theme.typography["Components"]["Alert Title"].letterSpacing,  
  textDecoration: theme.typography["Components"]["Alert Title"].textDecoration,  
  lineHeight: theme.typography["Components"]["Alert Title"].lineHeight,  
  textTransform: theme.typography["Components"]["Alert Title"].textTransform,  
  alignSelf: `stretch`,  
  margin: `4px 0px 0px 0px`,  
}));
  
const Description2 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(74, 25, 40, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Status = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: data.currentPlan === 15 && props.limits === "user" ? `0px` : data.currentPlan === 18 && props.limits === "user" ? `0px` : data.currentPlan === 14 && props.limits === "user" ? `0px` : data.currentPlan === 17 && props.limits === "user" ? `0px` : data.currentPlan === 15 && props.limits === "workspace" ? `0px` : data.currentPlan === 18 && props.limits === "workspace" ? `0px` : data.currentPlan === 14 && props.limits === "workspace" ? `0px` : data.currentPlan === 17 && props.limits === "workspace" ? `0px` : `20px 0px 0px 0px`,  
}));
  
const Rectangle65 = styled("div")({  
  backgroundColor: `rgba(218, 218, 218, 1)`,  
  height: `1px`,  
  width: `487.1px`,  
  margin: `0px`,  
});
  
const Totals = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px 21px 0px 0px`,  
  boxSizing: `border-box`,  
  width: `487.1px`,  
  margin: `20px 0px 0px 0px`,  
});
  
const Col1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const CurrentUsersInWorksp = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(128, 128, 128, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `10px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const Q3 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `1px 0px 0px 0px`,  
});
  
const Col2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px 0px 0px 150px`,  
});
  
const CurrentAppsInWorkspa = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(128, 128, 128, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `10px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const Q2 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `1px 0px 0px 0px`,  
});
  
const Divider = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  backgroundColor: `rgba(218, 218, 218, 1)`,  
  alignSelf: `stretch`,  
  height: `1px`,  
  margin: data.currentPlan === 14 && props.limits === false ? `0px` : data.currentPlan === 17 && props.limits === false ? `0px` : `20px 0px 0px 0px`,  
}));
  
const Options = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `22px 0px 0px 0px`,  
});
  
const Option1 = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: data.currentPlan === 14 && props.limits === false ? `0px 0px 0px 93px` : data.currentPlan === 17 && props.limits === false ? `0px 0px 0px 93px` : data.currentPlan === 14 && props.limits === "user" ? `0px 0px 0px 93px` : data.currentPlan === 17 && props.limits === "user" ? `0px 0px 0px 93px` : data.currentPlan === 14 && props.limits === "workspace" ? `0px 0px 0px 93px` : data.currentPlan === 17 && props.limits === "workspace" ? `0px 0px 0px 93px` : `0px`,  
}));
  
const Frame62 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `53.73px`,  
  width: `176px`,  
  margin: `0px`,  
});
  
const Q49MoPerWorkspaceUse1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `17px`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `37px`,  
});
  
const Q58MoPerWorkspaceUse1 = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `17px`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: data.currentPlan === 14 && props.limits === false ? `36px` : data.currentPlan === 14 && props.limits === "user" ? `36px` : data.currentPlan === 14 && props.limits === "workspace" ? `36px` : `37px`,  
}));
  
const DowngradeTo = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(128, 128, 128, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `10px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `0px`,  
});
  
const Pro1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `15px`,  
});
  
const Bullets = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px 0px 6px 0px`,  
  boxSizing: `border-box`,  
  margin: `12px 0px 0px 0px`,  
});
  
const Bullet6 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse456 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const UnlimitedWorkspaces2 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet7 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse457 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q1AppPerWorkspace1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet8 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse458 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q3UsersMaxPerWorkspa1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const ButtonContained = styled(Button)({  
  margin: `12px 0px 0px 0px`,  
});
  
const Option2 = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: data.currentPlan === 14 && props.limits === false ? `0px` : data.currentPlan === 17 && props.limits === false ? `0px` : data.currentPlan === 15 && props.limits === "user" ? `0px` : data.currentPlan === 18 && props.limits === "user" ? `0px` : data.currentPlan === 14 && props.limits === "user" ? `0px` : data.currentPlan === 17 && props.limits === "user" ? `0px` : data.currentPlan === 15 && props.limits === "workspace" ? `0px` : data.currentPlan === 18 && props.limits === "workspace" ? `0px` : data.currentPlan === 14 && props.limits === "workspace" ? `0px` : data.currentPlan === 17 && props.limits === "workspace" ? `0px` : `0px 0px 0px 93px`,  
}));
  
const Frame621 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `55.73px`,  
  width: `176px`,  
  margin: `0px`,  
});
  
const Q79MoPerWorkspaceUse1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `35px`,  
});
  
const Q93MoPerWorkspaceUse1 = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: data.currentPlan === 17 && props.limits === false ? `34px` : data.currentPlan === 17 && props.limits === "user" ? `34px` : data.currentPlan === 17 && props.limits === "workspace" ? `34px` : `35px`,  
}));
  
const UpgradeTo = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(128, 128, 128, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `10px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `0px`,  
});
  
const Team1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `15px`,  
});
  
const Bullets1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px 0px 6px 0px`,  
  boxSizing: `border-box`,  
  margin: `12px 0px 0px 0px`,  
});
  
const Bullet9 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse459 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const UnlimitedWorkspaces3 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet10 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse4510 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q5AppsPerWorkspace1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet11 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse4511 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const Q10UsersMaxPerWorksp1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const ButtonContained1 = styled(Button)({  
  margin: `12px 0px 0px 0px`,  
});
  
const Option3 = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ props, data }) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: data.currentPlan === 15 && props.limits === "user" ? `0px` : data.currentPlan === 18 && props.limits === "user" ? `0px` : data.currentPlan === 15 && props.limits === "workspace" ? `0px` : data.currentPlan === 18 && props.limits === "workspace" ? `0px` : `0px 0px 0px 93px`,  
}));
  
const Frame63 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `55.73px`,  
  width: `96px`,  
  margin: `0px`,  
});
  
const CustomPricing = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `1px`,  
  top: `35px`,  
});
  
const UpgradeTo1 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(128, 128, 128, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `10px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `0px`,  
});
  
const Enterprise = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `1px`,  
  top: `15px`,  
});
  
const Bullets2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px 0px 6px 0px`,  
  boxSizing: `border-box`,  
  margin: `12px 0px 0px 0px`,  
});
  
const Bullet12 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse4512 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const UnlimitedWorkspaces4 = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet13 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse4513 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const UnlimitedApps = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const Bullet14 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 0px 8px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Ellipse4514 = styled("img")({  
  height: `3px`,  
  width: `3px`,  
  margin: `0px`,  
});
  
const UnlimitedUsers = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 7px`,  
});
  
const ButtonContained2 = styled(Button)({  
  margin: `12px 0px 0px 0px`,  
});
 
function DowngradeUpgrade(props) {
  const {data, fns} = useDowngradeUpgrade();
  return ( 
    <StyledEngineProvider injectFirst>
      <ThemeProvider theme={questTheme}>
        <TypeTeamMonthlyLimit >
           {((data.currentPlan === 15 && props.limits === "user") || (data.currentPlan === 18 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 17 && props.limits === "user")) &&
               <TopWarningWorkspace props={props} data={data} >
               <Warning >
                 <Row >
                   <AlertOutlined >
                     <UnstyledAlert >
                       <IconContainer >
                         <Vector  src={VectorImage} alt={"Vector"}/>
                       </IconContainer>
                       <Text >
                         {false &&
                             <Title >
                             {`Title`}
                               </Title>
                         }
                         <Description >
                           {`You’ve reached the maximum Users per Workspace`}
                             </Description>
                       </Text>
                     </UnstyledAlert>
                   </AlertOutlined>
                 </Row>
               </Warning>
               <XHolder >
                 <X onClick={props.onClose}  src={XImage} alt={"x"}/>
               </XHolder>
             </TopWarningWorkspace>
           }
           {((data.currentPlan === 15 && props.limits === "workspace") || (data.currentPlan === 18 && props.limits === "workspace") || (data.currentPlan === 14 && props.limits === "workspace") || (data.currentPlan === 17 && props.limits === "workspace")) &&
               <TopWarningApps props={props} data={data} >
               <Warning1 >
                 <Row1 >
                   <AlertOutlined1 >
                     <UnstyledAlert1 >
                       <IconContainer1 >
                         <Vector1  src={Vector1Image} alt={"Vector"}/>
                       </IconContainer1>
                       <Text1 >
                         {false &&
                             <Title1 >
                             {`Title`}
                               </Title1>
                         }
                         <Description1 >
                           {`You’ve reached the maximum Apps per Workspace`}
                             </Description1>
                       </Text1>
                     </UnstyledAlert1>
                   </AlertOutlined1>
                 </Row1>
               </Warning1>
               <XHolder1 >
                 <X1 onClick={props.onClose}  src={X1Image} alt={"x"}/>
               </XHolder1>
             </TopWarningApps>
           }
           <TopAll props={props} data={data} >
             <Top >
               <TopSecWX props={props} data={data} >
                 <TopLeft props={props} data={data} >
                   <Top1 >
                     <YourCurrentSubscript >
                       {`Your Current Subscription Plan`}
                         </YourCurrentSubscript>
                     {(!(data.currentPlan === 14 && props.limits === false) && !(data.currentPlan === 17 && props.limits === false) && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 17 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "workspace") && !(data.currentPlan === 17 && props.limits === "workspace")) &&
                         <Team >
                         {`Team`}
                           </Team>
                     }
                     {((data.currentPlan === 14 && props.limits === false) || (data.currentPlan === 17 && props.limits === false) || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 17 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "workspace") || (data.currentPlan === 17 && props.limits === "workspace")) &&
                         <Pro >
                         {`Pro`}
                           </Pro>
                     }
                     {((data.currentPlan === 17 && props.limits === false) || (data.currentPlan === 17 && props.limits === "user") || (data.currentPlan === 17 && props.limits === "workspace")) &&
                         <Q49MoPerWorkspaceUse >
                         {`$49/mo per workspace user`}
                           </Q49MoPerWorkspaceUse>
                     }
                     {((data.currentPlan === 14 && props.limits === false) || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "workspace")) &&
                         <Q58MoPerWorkspaceUse >
                         {`$58/mo per workspace user`}
                           </Q58MoPerWorkspaceUse>
                     }
                     {((data.currentPlan === 18 && props.limits === false) || (data.currentPlan === 18 && props.limits === "user") || (data.currentPlan === 18 && props.limits === "workspace")) &&
                         <Q79MoPerWorkspaceUse >
                         {`$79/mo per workspace user`}
                           </Q79MoPerWorkspaceUse>
                     }
                     {(!(data.currentPlan === 18 && props.limits === false) && !(data.currentPlan === 14 && props.limits === false) && !(data.currentPlan === 17 && props.limits === false) && !(data.currentPlan === 18 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 17 && props.limits === "user") && !(data.currentPlan === 18 && props.limits === "workspace") && !(data.currentPlan === 14 && props.limits === "workspace") && !(data.currentPlan === 17 && props.limits === "workspace")) &&
                         <Q93MoPerWorkspaceUse >
                         {`$93/mo per workspace user`}
                           </Q93MoPerWorkspaceUse>
                     }
                   </Top1>
                   {((data.currentPlan === 14 && props.limits === false) || (data.currentPlan === 17 && props.limits === false) || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 17 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "workspace") || (data.currentPlan === 17 && props.limits === "workspace")) &&
                       <ProBullets >
                       <Bullet >
                         <Ellipse45  src={Ellipse45Image} alt={"Ellipse 45"}/>
                         <UnlimitedWorkspaces >
                           {`Unlimited Workspaces`}
                             </UnlimitedWorkspaces>
                       </Bullet>
                       <Bullet1 >
                         <Ellipse451  src={Ellipse451Image} alt={"Ellipse 45"}/>
                         <Q1AppPerWorkspace >
                           {`1 App per Workspace`}
                             </Q1AppPerWorkspace>
                       </Bullet1>
                       <Bullet2 >
                         <Ellipse452  src={Ellipse452Image} alt={"Ellipse 45"}/>
                         <Q3UsersMaxPerWorkspa >
                           {`3 Users max per Workspace`}
                             </Q3UsersMaxPerWorkspa>
                       </Bullet2>
                     </ProBullets>
                   }
                   {(!(data.currentPlan === 14 && props.limits === false) && !(data.currentPlan === 17 && props.limits === false) && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 17 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "workspace") && !(data.currentPlan === 17 && props.limits === "workspace")) &&
                       <TeamBullets >
                       <Bullet3 >
                         <Ellipse453  src={Ellipse453Image} alt={"Ellipse 45"}/>
                         <UnlimitedWorkspaces1 >
                           {`Unlimited Workspaces`}
                             </UnlimitedWorkspaces1>
                       </Bullet3>
                       <Bullet4 >
                         <Ellipse454  src={Ellipse454Image} alt={"Ellipse 45"}/>
                         <Q5AppsPerWorkspace >
                           {`5 Apps per Workspace`}
                             </Q5AppsPerWorkspace>
                       </Bullet4>
                       <Bullet5 >
                         <Ellipse455  src={Ellipse455Image} alt={"Ellipse 45"}/>
                         <Q10UsersMaxPerWorksp >
                           {`10 Users max per Workspace`}
                             </Q10UsersMaxPerWorksp>
                       </Bullet5>
                     </TeamBullets>
                   }
                 </TopLeft>
                 {(!(data.currentPlan === 15 && props.limits === "user") && !(data.currentPlan === 18 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 17 && props.limits === "user") && !(data.currentPlan === 15 && props.limits === "workspace") && !(data.currentPlan === 18 && props.limits === "workspace") && !(data.currentPlan === 14 && props.limits === "workspace") && !(data.currentPlan === 17 && props.limits === "workspace")) &&
                     <X2 onClick={props.onClose} props={props} data={data}  src={X2Image} alt={"x"}/>
                 }
               </TopSecWX>
               <Mid >
                 {(!(data.currentPlan === 14 && props.limits === false) && !(data.currentPlan === 17 && props.limits === false) && !(data.currentPlan === 15 && props.limits === "user") && !(data.currentPlan === 18 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 17 && props.limits === "user") && !(data.currentPlan === 15 && props.limits === "workspace") && !(data.currentPlan === 18 && props.limits === "workspace") && !(data.currentPlan === 14 && props.limits === "workspace") && !(data.currentPlan === 17 && props.limits === "workspace")) &&
                     <Warning2 props={props} data={data} >
                     {(data.areDowngradeLimitsOver) &&
                         <Row2 >
                         <AlertOutlined2 >
                           <UnstyledAlert2 >
                             <IconContainer2 >
                               <Vector2  src={Vector2Image} alt={"Vector"}/>
                             </IconContainer2>
                             <Text2 >
                               {false &&
                                   <Title2 >
                                   {`Title`}
                                     </Title2>
                               }
                               <Description2 >
                                 {`For each Workspace, remove any Apps over 1 & Users over 3`}
                                   </Description2>
                             </Text2>
                           </UnstyledAlert2>
                         </AlertOutlined2>
                       </Row2>
                     }
                   </Warning2>
                 }
                 {((data.currentPlan === 15 && props.limits === "user") || (data.currentPlan === 18 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 17 && props.limits === "user") || (data.currentPlan === 15 && props.limits === "workspace") || (data.currentPlan === 18 && props.limits === "workspace") || (data.currentPlan === 14 && props.limits === "workspace") || (data.currentPlan === 17 && props.limits === "workspace")) &&
                     <Status props={props} data={data} >
                     <Rectangle65 >
                     </Rectangle65>
                     <Totals >
                       <Col1 >
                         <CurrentUsersInWorksp >
                           {`Current Users in Workspace`}
                             </CurrentUsersInWorksp>
                         <Q3 >
                           {data.usersInWorkspace}
                             </Q3>
                       </Col1>
                       <Col2 >
                         <CurrentAppsInWorkspa >
                           {`Current Apps in Workspace`}
                             </CurrentAppsInWorkspa>
                         <Q2 >
                           {data.appsInWorkspace}
                             </Q2>
                       </Col2>
                     </Totals>
                   </Status>
                 }
                 <Divider props={props} data={data} >
                 </Divider>
               </Mid>
             </Top>
           </TopAll>
           <Options >
             {(!(data.currentPlan === 14 && props.limits === false) && !(data.currentPlan === 17 && props.limits === false) && !(data.currentPlan === 15 && props.limits === "user") && !(data.currentPlan === 18 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 17 && props.limits === "user") && !(data.currentPlan === 15 && props.limits === "workspace") && !(data.currentPlan === 18 && props.limits === "workspace") && !(data.currentPlan === 14 && props.limits === "workspace") && !(data.currentPlan === 17 && props.limits === "workspace")) &&
                 <Option1 props={props} data={data} >
                 <Frame62 >
                   {((data.currentPlan === 18 && props.limits === false) || (data.currentPlan === 14 && props.limits === false) || (data.currentPlan === 17 && props.limits === false) || (data.currentPlan === 18 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 17 && props.limits === "user") || (data.currentPlan === 18 && props.limits === "workspace") || (data.currentPlan === 14 && props.limits === "workspace") || (data.currentPlan === 17 && props.limits === "workspace")) &&
                       <Q49MoPerWorkspaceUse1 >
                       {`$49/mo per workspace user`}
                         </Q49MoPerWorkspaceUse1>
                   }
                   {(!(data.currentPlan === 18 && props.limits === false) && !(data.currentPlan === 14 && props.limits === false) && !(data.currentPlan === 17 && props.limits === false) && !(data.currentPlan === 18 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 17 && props.limits === "user") && !(data.currentPlan === 18 && props.limits === "workspace") && !(data.currentPlan === 14 && props.limits === "workspace") && !(data.currentPlan === 17 && props.limits === "workspace")) &&
                       <Q58MoPerWorkspaceUse1 props={props} data={data} >
                       {`$58/mo per workspace user`}
                         </Q58MoPerWorkspaceUse1>
                   }
                   <DowngradeTo >
                     {`Downgrade to`}
                       </DowngradeTo>
                   <Pro1 >
                     {`Pro`}
                       </Pro1>
                 </Frame62>
                 <Bullets >
                   <Bullet6 >
                     <Ellipse456  src={Ellipse456Image} alt={"Ellipse 45"}/>
                     <UnlimitedWorkspaces2 >
                       {`Unlimited Workspaces`}
                         </UnlimitedWorkspaces2>
                   </Bullet6>
                   <Bullet7 >
                     <Ellipse457  src={Ellipse457Image} alt={"Ellipse 45"}/>
                     <Q1AppPerWorkspace1 >
                       {`1 App per Workspace`}
                         </Q1AppPerWorkspace1>
                   </Bullet7>
                   <Bullet8 >
                     <Ellipse458  src={Ellipse458Image} alt={"Ellipse 45"}/>
                     <Q3UsersMaxPerWorkspa1 >
                       {`3 Users max per Workspace`}
                         </Q3UsersMaxPerWorkspa1>
                   </Bullet8>
                 </Bullets>
                 <ButtonContained variant="contained" size="medium" color="primary"  onClick={() => { fns.handleDowngrade(props.onClose) }} disabled={data.areDowngradeLimitsOver}  > Downgrade </ButtonContained>
               </Option1>
             }
             {((data.currentPlan === 14 && props.limits === false) || (data.currentPlan === 17 && props.limits === false) || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 17 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "workspace") || (data.currentPlan === 17 && props.limits === "workspace")) &&
                 <Option2 props={props} data={data} >
                 <Frame621 >
                   {(!(data.currentPlan === 14 && props.limits === false) && !(data.currentPlan === 14 && props.limits === "user") && !(data.currentPlan === 14 && props.limits === "workspace")) &&
                       <Q79MoPerWorkspaceUse1 >
                       {`$79/mo per workspace user`}
                         </Q79MoPerWorkspaceUse1>
                   }
                   {((data.currentPlan === 14 && props.limits === false) || (data.currentPlan === 14 && props.limits === "user") || (data.currentPlan === 14 && props.limits === "workspace")) &&
                       <Q93MoPerWorkspaceUse1 props={props} data={data} >
                       {`$93/mo per workspace user`}
                         </Q93MoPerWorkspaceUse1>
                   }
                   <UpgradeTo >
                     {`Upgrade to`}
                       </UpgradeTo>
                   <Team1 >
                     {`Team`}
                       </Team1>
                 </Frame621>
                 <Bullets1 >
                   <Bullet9 >
                     <Ellipse459  src={Ellipse459Image} alt={"Ellipse 45"}/>
                     <UnlimitedWorkspaces3 >
                       {`Unlimited Workspaces`}
                         </UnlimitedWorkspaces3>
                   </Bullet9>
                   <Bullet10 >
                     <Ellipse4510  src={Ellipse4510Image} alt={"Ellipse 45"}/>
                     <Q5AppsPerWorkspace1 >
                       {`5 Apps per Workspace`}
                         </Q5AppsPerWorkspace1>
                   </Bullet10>
                   <Bullet11 >
                     <Ellipse4511  src={Ellipse4511Image} alt={"Ellipse 45"}/>
                     <Q10UsersMaxPerWorksp1 >
                       {`10 Users max per Workspace`}
                         </Q10UsersMaxPerWorksp1>
                   </Bullet11>
                 </Bullets1>
                 <ButtonContained1 variant="contained" size="medium" color="primary"  onClick={() => { fns.handleUpgrade(props.onClose) }}  > Upgrade </ButtonContained1>
               </Option2>
             }
             <Option3 props={props} data={data} >
               <Frame63 >
                 <CustomPricing >
                   {`Custom pricing`}
                     </CustomPricing>
                 <UpgradeTo1 >
                   {`Upgrade to`}
                     </UpgradeTo1>
                 <Enterprise >
                   {`Enterprise`}
                     </Enterprise>
               </Frame63>
               <Bullets2 >
                 <Bullet12 >
                   <Ellipse4512  src={Ellipse4512Image} alt={"Ellipse 45"}/>
                   <UnlimitedWorkspaces4 >
                     {`Unlimited Workspaces`}
                       </UnlimitedWorkspaces4>
                 </Bullet12>
                 <Bullet13 >
                   <Ellipse4513  src={Ellipse4513Image} alt={"Ellipse 45"}/>
                   <UnlimitedApps >
                     {`Unlimited Apps`}
                       </UnlimitedApps>
                 </Bullet13>
                 <Bullet14 >
                   <Ellipse4514  src={Ellipse4514Image} alt={"Ellipse 45"}/>
                   <UnlimitedUsers >
                     {`Unlimited Users`}
                       </UnlimitedUsers>
                 </Bullet14>
               </Bullets2>
               <ButtonContained2 variant="contained" size="medium" color="primary"  onClick={() => { fns.handleContactSales(props.onClose) }}  > Contact Sales </ButtonContained2>
             </Option3>
           </Options>
         </TypeTeamMonthlyLimit>
  
      </ThemeProvider>
    </StyledEngineProvider>
  );
}

export default DowngradeUpgrade;
