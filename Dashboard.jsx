/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import Sidebar from './Sidebar';
import NavBar from './NavBar';
import FeedbackBar from './FeedbackBar';
import Upcoming from './Upcoming';
import Notifications from './Notifications';
import ProductCard from './ProductCard';
import PaymentCard from './PaymentCard';

 
const TypeQuestSidebarOpen = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: `1423px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const Page = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  height: `1079px`,  
  margin: `0px`,  
});
  
const Sidebar1 = styled(Sidebar)(({ theme }) =>({  
  alignSelf: `stretch`,  
  width: `290px`,  
  margin: `0px`,  
}));
  
const Content = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const NavBar1 = styled(NavBar)(({ theme }) =>({  
  alignSelf: `stretch`,  
  height: `80px`,  
  margin: `0px`,  
}));
  
const Sec1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `22px 60px 30px 60px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const HeroContent = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 20px 0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const WelcomeRow = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const WelcomeText = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Inter`,  
  fontWeight: `700`,  
  fontSize: `28px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const FeedbackBar1 = styled(FeedbackBar)(({ theme }) =>({  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
  
const Sec2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px 61px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Upcoming1 = styled(Upcoming)(({ theme }) =>({  
  flexGrow: `1`,  
  margin: `0px`,  
}));
  
const Padding = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  width: `252px`,  
  margin: `0px`,  
});
  
const Notifications1 = styled(Notifications)(({ theme }) =>({  
  margin: `0px`,  
}));
  
const Sec3 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `40px 61px 0px 61px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const PopularSwag = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Inter`,  
  fontWeight: `700`,  
  fontSize: `22px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const Items = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `20px 0px 0px 0px`,  
});
  
const ProductCard1 = styled(ProductCard)(({ theme }) =>({  
  flexGrow: `1`,  
  margin: `0px`,  
}));
  
const ProductCard2 = styled(ProductCard)(({ theme }) =>({  
  flexGrow: `1`,  
  margin: `0px 0px 0px 30px`,  
}));
  
const ProductCard3 = styled(ProductCard)(({ theme }) =>({  
  flexGrow: `1`,  
  margin: `0px 0px 0px 30px`,  
}));
  
const ProductCard4 = styled(ProductCard)(({ theme }) =>({  
  flexGrow: `1`,  
  margin: `0px 0px 0px 30px`,  
}));
  
const PaymentCard1 = styled(PaymentCard)(({ theme }) =>({  
  height: `574px`,  
  width: `728px`,  
  margin: `0px`,  
}));
 
function Dashboard() {
  return (
    <TypeQuestSidebarOpen >
       <Page >
         <Sidebar1   />
         <Content >
           <NavBar1   />
           <Sec1 >
             <HeroContent >
               <WelcomeRow >
                 <WelcomeText >
                   {`Welcome back to Moon Base, Ellen`}
                     </WelcomeText>
               </WelcomeRow>
             </HeroContent>
             <FeedbackBar1   />
           </Sec1>
           <Sec2 >
             <Upcoming1   />
             <Padding >
             </Padding>
             <Notifications1   />
           </Sec2>
           <Sec3 >
             <PopularSwag >
               {`Popular Swag`}
                 </PopularSwag>
             <Items >
               <ProductCard1   />
               <ProductCard2   />
               <ProductCard3   />
               <ProductCard4   />
             </Items>
           </Sec3>
         </Content>
       </Page>
       {false &&
           <PaymentCard1   />
       }
     </TypeQuestSidebarOpen>
   );
}

export default Dashboard;
