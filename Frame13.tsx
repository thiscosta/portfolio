/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { Avatar } from '@mui/material';
import Avatar1Image from './assets/images/Avatar.png';
import { styled } from '@mui/material/styles';
import { Frame13Props } from './types';

 
const Frame131: any = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: `501px`,  
  height: `251px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
});
  
const Frame14: any = styled("div")({  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  left: `230px`,  
  top: `41px`,  
});
  
const Avatar1: any = styled(Avatar)({  
  margin: `0px`,  
  width: `40px`,  
  height: `40px`,  
});
  
const Avatar2: any = styled(Avatar)({  
  margin: `0px 0px 0px 24px`,  
  width: `40px`,  
  height: `40px`,  
});
  
const Avatar3: any = styled(Avatar)({  
  margin: `0px 0px 0px 24px`,  
  width: `40px`,  
  height: `40px`,  
});
 
function Frame13(props: Frame13Props): JSX.Element {
  return (
    <Frame131 >
       <Frame14 >
         <Avatar1 variant="circular" src={Avatar1Image} alt={"Avatar"}   />
         <Avatar2 variant="circular"  >OP</Avatar2>
       </Frame14>
     </Frame131>
   );
}

export default Frame13;
