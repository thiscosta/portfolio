/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { Button, Link } from '@mui/material';
import { styled } from '@mui/material/styles';
import Delete from './Delete';

 
const RepoApiKeyList1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: `466px`,  
  height: `622px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const Divider = styled("div")({  
  backgroundColor: `rgba(229, 229, 229, 1)`,  
  width: `322px`,  
  height: `1px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `165px`,  
});
  
const SiteName = styled("div")({  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `56px`,  
  height: `15px`,  
  left: `0px`,  
  top: `140px`,  
});
  
const KeyName = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(128, 128, 128, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `10px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `56px`,  
  height: `15px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `0px`,  
});
  
const Divider1 = styled("div")({  
  backgroundColor: `rgba(229, 229, 229, 1)`,  
  width: `322px`,  
  height: `1px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `217px`,  
});
  
const AndrewJasper = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `13px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `192.17px`,  
  height: `19px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `181px`,  
});
  
const Delete1 = styled(Delete)(({ theme }) =>({  
  width: `24px`,  
  height: `24px`,  
  position: `absolute`,  
  left: `294px`,  
  top: `179px`,  
}));
  
const Divider2 = styled("div")({  
  backgroundColor: `rgba(229, 229, 229, 1)`,  
  width: `322px`,  
  height: `1px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `270px`,  
});
  
const Sudhir = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `13px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `192.17px`,  
  height: `19px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `234px`,  
});
  
const Delete2 = styled(Delete)(({ theme }) =>({  
  width: `24px`,  
  height: `24px`,  
  position: `absolute`,  
  left: `294px`,  
  top: `232px`,  
}));
  
const Divider3 = styled("div")({  
  backgroundColor: `rgba(229, 229, 229, 1)`,  
  width: `322px`,  
  height: `1px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `323px`,  
});
  
const Nagesh = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `13px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `192.17px`,  
  height: `19px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `287px`,  
});
  
const Delete3 = styled(Delete)(({ theme }) =>({  
  width: `24px`,  
  height: `24px`,  
  position: `absolute`,  
  left: `294px`,  
  top: `285px`,  
}));
  
const Divider4 = styled("div")({  
  backgroundColor: `rgba(229, 229, 229, 1)`,  
  width: `322px`,  
  height: `1px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `374px`,  
});
  
const Matt = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(39, 39, 39, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `13px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `192.17px`,  
  height: `19px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `338px`,  
});
  
const Delete4 = styled(Delete)(({ theme }) =>({  
  width: `24px`,  
  height: `24px`,  
  position: `absolute`,  
  left: `294px`,  
  top: `336px`,  
}));
  
const AddMore = styled("div")({  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  left: `2px`,  
  top: `416px`,  
});
  
const ButtonContained = styled(Button)({  
  margin: `0px`,  
});
  
const RepositoryApiKeys = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `0px`,  
  top: `0px`,  
}));
  
const QuestNativelyTxt = styled("div")({  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  left: `0px`,  
  top: `43px`,  
});
  
const ConnectYourAppsToYou = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: theme.typography["Typography"]["Body 3"].fontStyle,  
  fontFamily: theme.typography["Typography"]["Body 3"].fontFamily,  
  fontWeight: theme.typography["Typography"]["Body 3"].fontWeight,  
  fontSize: theme.typography["Typography"]["Body 3"].fontSize,  
  letterSpacing: theme.typography["Typography"]["Body 3"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["Body 3"].textDecoration,  
  lineHeight: theme.typography["Typography"]["Body 3"].lineHeight,  
  textTransform: theme.typography["Typography"]["Body 3"].textTransform,  
  width: `438px`,  
  margin: `0px`,  
}));
  
const Link1 = styled(Link)(({ theme }) =>({  
  color: theme.palette["Primary"]["Main"],  
  fontStyle: theme.typography["Typography"]["Body 3"].fontStyle,  
  fontFamily: theme.typography["Typography"]["Body 3"].fontFamily,  
  fontWeight: theme.typography["Typography"]["Body 3"].fontWeight,  
  fontSize: theme.typography["Typography"]["Body 3"].fontSize,  
  letterSpacing: theme.typography["Typography"]["Body 3"].letterSpacing,  
  lineHeight: theme.typography["Typography"]["Body 3"].lineHeight,  
  textTransform: theme.typography["Typography"]["Body 3"].textTransform,  
  margin: `6px 0px 0px 0px`,  
}));
 
function RepoApiKeyList() {
  return (
    <RepoApiKeyList1 >
       <Divider >
       </Divider>
       <SiteName >
         <KeyName >
           {`Key Name`}
             </KeyName>
       </SiteName>
       <Divider1 >
       </Divider1>
       <AndrewJasper >
         {`Andrew Jasper`}
           </AndrewJasper>
       <Delete1   />
       <Divider2 >
       </Divider2>
       <Sudhir >
         {`Sudhir`}
           </Sudhir>
       <Delete2   />
       <Divider3 >
       </Divider3>
       <Nagesh >
         {`Nagesh`}
           </Nagesh>
       <Delete3   />
       <Divider4 >
       </Divider4>
       <Matt >
         {`Matt`}
           </Matt>
       <Delete4   />
       <AddMore >
         <ButtonContained variant="contained" size="medium" color="primary"    > Add a Key </ButtonContained>
       </AddMore>
       <RepositoryApiKeys >
         {`Repository API Keys`}
           </RepositoryApiKeys>
       <QuestNativelyTxt >
         <ConnectYourAppsToYou >
           {`Connect your Apps to your GitHub Repository by adding your API Key.`}
             </ConnectYourAppsToYou>
         <Link1 href="#" underline="hover"  >Learn More</Link1>
       </QuestNativelyTxt>
     </RepoApiKeyList1>
   );
}

export default RepoApiKeyList;
