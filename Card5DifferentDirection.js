/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { styled } from '@mui/material/styles';
import ImageImage from './assets/images/Image.png';
import Button1 from './Button1';

 
const Card5DifferentDirect = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: `1005px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const Card4Child = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  boxShadow: `0px 4px 6px rgba(3, 0, 161, 0.2)`,  
  borderRadius: `8px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `1005px`,  
  height: `500px`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const Image = styled("div")({  
  backgroundImage: `url(${ImageImage})`,  
  backgroundPosition: `center`,  
  backgroundSize: `cover`,  
  backgroundRepeat: `no-repeat`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  alignSelf: `stretch`,  
  width: `540px`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const FixedWidth = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `90px 40px 20px 40px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  height: `213px`,  
  margin: `0px 0px 0px 30px`,  
});
  
const HighestParentSetToSp = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `20px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `297.86px`,  
  margin: `0px`,  
});
  
const ButtonClicked = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(107, 104, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `20px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  height: `48px`,  
  width: `138px`,  
  margin: `30px 0px 0px 0px`,  
});
  
const Button2 = styled(Button1)(({ theme }) =>({  
  margin: `30px 0px 0px 0px`,  
}));
 
function Card5DifferentDirection() {
  return (
    <Card5DifferentDirect >
       <Card4Child >
         <Image >
         </Image>
         <FixedWidth >
           <HighestParentSetToSp >
             {`Highest parent set to Space between.`}
               </HighestParentSetToSp>
           {false &&
               <ButtonClicked >
               {`Button Clicked!`}
                 </ButtonClicked>
           }
           <Button2   />
         </FixedWidth>
       </Card4Child>
     </Card5DifferentDirect>
   );
}

export default Card5DifferentDirection;
