/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { TextField, Checkbox, Link, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import QuestLogoVertical from './QuestLogoVertical';
import SignupSwitch from './SignupSwitch';
import Countries from './Countries';
import StripeCard from './StripeCard';

 
const Property1Default = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: `320px`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const Top = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 60px 0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const QuestLogoVertical1 = styled(QuestLogoVertical)(({ theme }) =>({  
  margin: `0px`,  
}));
  
const Tier = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `16px 0px 0px 0px`,  
});
  
const TierPro = styled("div")(({ theme }) =>({  
  textAlign: `center`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: theme.typography["Typography"]["H4"].fontStyle,  
  fontFamily: theme.typography["Typography"]["H4"].fontFamily,  
  fontWeight: theme.typography["Typography"]["H4"].fontWeight,  
  fontSize: theme.typography["Typography"]["H4"].fontSize,  
  letterSpacing: theme.typography["Typography"]["H4"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["H4"].textDecoration,  
  lineHeight: theme.typography["Typography"]["H4"].lineHeight,  
  textTransform: theme.typography["Typography"]["H4"].textTransform,  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
  
const SignupSwitch1 = styled(SignupSwitch)(({ theme }) =>({  
  alignSelf: `stretch`,  
  margin: `1px 0px 0px 0px`,  
}));
  
const MonthPrice = styled("div")(({ theme }) =>({  
  textAlign: `center`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `500`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `238px`,  
  margin: `1px 0px 0px 0px`,  
}));
  
const Middle = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px 0px 30px 0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Frame8 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TextFieldFirstName = styled(TextField)({  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const TextFieldLastName = styled(TextField)({  
  flexGrow: `1`,  
  margin: `0px 0px 0px 16px`,  
});
  
const TextFieldCompany = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `18px 0px 0px 0px`,  
});
  
const Countries1 = styled(Countries)(({ theme }) =>({  
  width: `320px`,  
  margin: `18px 0px 0px 0px`,  
}));
  
const Bottom = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Card = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const CcText = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const StripeCard1 = styled(StripeCard)(({ theme }) =>({  
  margin: `0px`,  
}));
  
const CcErrorMessage = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Error"]["Main"],  
  fontStyle: theme.typography["Components"]["Helper Text"].fontStyle,  
  fontFamily: theme.typography["Components"]["Helper Text"].fontFamily,  
  fontWeight: theme.typography["Components"]["Helper Text"].fontWeight,  
  fontSize: theme.typography["Components"]["Helper Text"].fontSize,  
  letterSpacing: theme.typography["Components"]["Helper Text"].letterSpacing,  
  textDecoration: theme.typography["Components"]["Helper Text"].textDecoration,  
  lineHeight: theme.typography["Components"]["Helper Text"].lineHeight,  
  textTransform: theme.typography["Components"]["Helper Text"].textTransform,  
  margin: `5px 0px 0px 0px`,  
}));
  
const Frame1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `5px 0px 0px 0px`,  
});
  
const TotalPrice = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `-0.14px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const TotalPrice1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Primary"]["Main"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `-0.14px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 3px`,  
}));
  
const BtnAndTerms = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `50px 0px 0px 0px`,  
});
  
const Terms = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Checkbox1 = styled(Checkbox)({  
  margin: `0px`,  
});
  
const IAgreeToThe = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: theme.typography["Typography"]["Body 3"].fontStyle,  
  fontFamily: theme.typography["Typography"]["Body 3"].fontFamily,  
  fontWeight: theme.typography["Typography"]["Body 3"].fontWeight,  
  fontSize: theme.typography["Typography"]["Body 3"].fontSize,  
  letterSpacing: theme.typography["Typography"]["Body 3"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["Body 3"].textDecoration,  
  lineHeight: theme.typography["Typography"]["Body 3"].lineHeight,  
  textTransform: theme.typography["Typography"]["Body 3"].textTransform,  
  width: `86px`,  
  height: `22px`,  
  margin: `0px`,  
}));
  
const TermsOfService = styled(Link)(({ theme }) =>({  
  color: theme.palette["Primary"]["Main"],  
  fontStyle: theme.typography["Typography"]["Body 3"].fontStyle,  
  fontFamily: theme.typography["Typography"]["Body 3"].fontFamily,  
  fontWeight: theme.typography["Typography"]["Body 3"].fontWeight,  
  fontSize: theme.typography["Typography"]["Body 3"].fontSize,  
  letterSpacing: theme.typography["Typography"]["Body 3"].letterSpacing,  
  lineHeight: theme.typography["Typography"]["Body 3"].lineHeight,  
  textTransform: theme.typography["Typography"]["Body 3"].textTransform,  
  margin: `0px`,  
}));
  
const CreateAccountGroup = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `10px 0px 0px 0px`,  
  boxSizing: `border-box`,  
  width: `320px`,  
  margin: `0px`,  
});
  
const ErrorMessage = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Error"]["Main"],  
  fontStyle: theme.typography["Components"]["Helper Text"].fontStyle,  
  fontFamily: theme.typography["Components"]["Helper Text"].fontFamily,  
  fontWeight: theme.typography["Components"]["Helper Text"].fontWeight,  
  fontSize: theme.typography["Components"]["Helper Text"].fontSize,  
  letterSpacing: theme.typography["Components"]["Helper Text"].letterSpacing,  
  textDecoration: theme.typography["Components"]["Helper Text"].textDecoration,  
  lineHeight: theme.typography["Components"]["Helper Text"].lineHeight,  
  textTransform: theme.typography["Components"]["Helper Text"].textTransform,  
  margin: `0px`,  
}));
  
const SignUpButton = styled(Button)({  
  alignSelf: `stretch`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Padding = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  alignSelf: `stretch`,  
  height: `259px`,  
  margin: `0px`,  
});
 
function SignupPayment() {
  return (
    <Property1Default >
       <Top >
         <QuestLogoVertical1   />
         <Tier >
           <TierPro >
             {`Tier: Pro`}
               </TierPro>
           <SignupSwitch1   />
           <MonthPrice >
             {`$49/mo per workspace user`}
               </MonthPrice>
         </Tier>
       </Top>
       <Middle >
         <Frame8 >
           <TextFieldFirstName variant="standard" size="medium"  label={`First Name`} helperText="Helper text"   />
           <TextFieldLastName variant="standard" size="medium"  label={`Last Name`} helperText="Helper text"   />
         </Frame8>
         <TextFieldCompany variant="standard" size="medium"  label={`Company Name`} helperText="Helper text"   />
         <Countries1   />
       </Middle>
       <Bottom >
         <Card >
           <CcText >
             <StripeCard1   />
             <CcErrorMessage >
               {`Error Message Placeholder`}
                 </CcErrorMessage>
             <Frame1 >
               <TotalPrice >
                 {`Card will be charged $99.00 after the`}
                   </TotalPrice>
               <TotalPrice1 >
                 {`14 day trial`}
                   </TotalPrice1>
             </Frame1>
           </CcText>
         </Card>
         <BtnAndTerms >
           <Terms >
             <Checkbox1  size="medium" color="primary" />
                   <IAgreeToThe >
               {`I agree to the`}
                 </IAgreeToThe>
             <TermsOfService href="#" underline="hover"  >Terms of Service</TermsOfService>
           </Terms>
           <CreateAccountGroup >
             <ErrorMessage >
               {`Error Message Placeholder`}
                 </ErrorMessage>
             <SignUpButton variant="contained" size="large" color="primary"    > Create My Account </SignUpButton>
           </CreateAccountGroup>
         </BtnAndTerms>
       </Bottom>
       <Padding >
       </Padding>
     </Property1Default>
   );
}

export default SignupPayment;
